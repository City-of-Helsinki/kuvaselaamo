name: Build & Review & Accept
on: [pull_request]

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: "build_artifacts"
  SERVICE_ARTIFACT_FOLDER: "service_artifacts"
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  DATABASE_USER: user
  DATABASE_PASSWORD: testing-password
  APP_MIGRATE_COMMAND: /app/.prod/on_deploy.sh
  SERVICE_PORT: "8080"
  K8S_REQUEST_CPU: 100m
  K8S_REQUEST_RAM: 200Mi
  K8S_LIMIT_CPU: 800m
  K8S_LIMIT_RAM: 1Gi
  VAULT_JWT_PRIVATE_KEY: ${{ secrets.VAULT_ACCESS_PRIVATE_KEY_REVIEW }}
  VAULT_ADDR: ${{ secrets.VAULT_URL }}
  VAULT_KV_VERSION: "2"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2

  review:
    runs-on: ubuntu-latest
    needs: build
    name: Review and Accept
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Review-Services
        uses: andersinno/kolga-deploy-service-action@v2
        with:
          projects: KUVASELAAMO
        env:
          POSTGRES_IMAGE: "docker.io/andersinnovations/postgis:11-bitnami"

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}.${{ env.BASE_DOMAIN }}
          K8S_SECRET_ALLOWED_HOSTS: "*"
          K8S_SECRET_DEBUG: 1
          K8S_SECRET_VERSION: ${{ github.sha }}
          K8S_SECRET_HKM_DEFAULT_FROM_EMAIL: "no-reply@hel.ninja"
          K8S_SECRET_ADMIN_USER_PASSWORD: ${{ secrets.STAGING_ADMIN_USER_PASSWORD }}
          K8S_SECRET_HKM_FEEDBACK_NOTIFICATION_EMAILS: "dummy-address@hel.ninja"
          K8S_SECRET_EMAIL_BACKEND: "anymail.backends.mailgun.EmailBackend"
          K8S_SECRET_MAIL_MAILGUN_KEY: ${{ secrets.GH_STAGING_MAILGUN_API_KEY }}
          K8S_SECRET_MAIL_MAILGUN_DOMAIN: "hel.fi"
          K8S_SECRET_MAIL_MAILGUN_API: "https://api.eu.mailgun.net/v3"
          K8S_SECRET_HKM_PBW_API_ENDPOINT: "https://payform.bambora.com/pbwapi"
          K8S_SECRET_HKM_PBW_API_KEY: ${{ secrets.GH_QA_PBW_API_KEY }}
          K8S_SECRET_HKM_PBW_SECRET_KEY: ${{ secrets.GH_QA_PBW_SECRET_KEY }}
          K8S_SECRET_HKM_MY_DOMAIN: https://${{ env.K8S_NAMESPACE }}.${{ env.BASE_DOMAIN }}
          K8S_SECRET_HKM_PRINTMOTOR_USERNAME: "helsinkikuvia"
          K8S_SECRET_HKM_PRINTMOTOR_PASSWORD: ${{ secrets.GH_QA_PRINTMOTOR_PASSWORD }}
          K8S_SECRET_HKM_PRINTMOTOR_API_KEY: ${{ secrets.GH_QA_PRINTMOTOR_API_KEY }}
          K8S_SECRET_HKM_PRINTMOTOR_API_ENDPOINT: "https://test-api.printmotor.com/api/v1/order"
          K8S_SECRET_HKM_POSTAL_FEES: ${{ secrets.HKM_POSTAL_FEES }}
          K8S_SECRET_LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          VAULT_JWT_AUTH_PATH: ${{ github.event.repository.name }}-${{ matrix.service }}-review
          VAULT_KV_SECRET_MOUNT_POINT: review

      - name: Setup kubectl
        run: |
          echo "${{ env.KUBECONFIG_RAW }}" > $(pwd)/kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
        shell: bash
      - name: Get Review Deploy URL
        id: deploy-url
        run: |
          DEPLOY_URL=$(kubectl get ingress -n "${{ env.K8S_NAMESPACE }}" -o jsonpath='{.items[0].spec.rules[0].host}')
          echo "BROWSER_TESTING_BASE_URL=https://$DEPLOY_URL" >> $GITHUB_ENV
        shell: bash

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm ci --prefer-offline

      - name: Run Acceptance Tests
        run: npm run browser-test:ci
      - name: Upload screenshots of failed tests
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screenshots
          path: screenshots/
